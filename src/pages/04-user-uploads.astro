---
import { Image } from '@unpic/astro';
import { v2 as cloudinary, type TransformationOptions } from 'cloudinary';
import Layout from '../layouts/default.astro';

export const prerender = false;

cloudinary.config({
	cloud_name: import.meta.env.CLOUDINARY_CLOUD_NAME,
	api_key: import.meta.env.CLOUDINARY_API_KEY,
	api_secret: import.meta.env.CLOUDINARY_API_SECRET,
});

// https://github.com/cloudinary-community/cloudinary-examples/blob/main/examples/astro-form-upload/src/pages/upload.astro
const uploadStream = async (buffer: Uint8Array) => {
	return new Promise((resolve, reject) => {
		cloudinary.uploader
			.upload_stream(
				{
					folder: 'cloudinary-images',

					// use auto-captioning to get alt text for user uploads
					detection: 'captioning',
				},
				(error, result) => {
					if (error) return reject(error);
					resolve(result);
				},
			)
			// @ts-expect-error https://github.com/cloudinary/cloudinary_npm/issues/663
			.end(buffer);
	});
};

let uploadedFile: any | undefined;
let banner;
let thumb;
let alt;

if (Astro.request.method === 'POST') {
	const data = await Astro.request.formData();

	const file = data.get('file') as File;

	const arrayBuffer = await file.arrayBuffer();
	const uint8Array = new Uint8Array(arrayBuffer);

	uploadedFile = await uploadStream(uint8Array);
}

if (uploadedFile && uploadedFile.public_id) {
	const public_id = uploadedFile.public_id;
	alt = uploadedFile.info?.detection?.captioning?.data?.caption ?? '';

	const base_transformation: TransformationOptions = {
		quality: 'auto',
		format: 'auto',
	};

	banner = cloudinary.url(public_id, {
		transformation: [base_transformation, { crop: 'fill', gravity: 'face' }],
	});

	thumb = cloudinary.url(public_id, {
		transformation: [
			base_transformation,
			{ crop: 'thumb', gravity: 'face:auto' },
		],
	});
}
---

<Layout>
	<h1>04. User Uploads</h1>

	<form method="post" enctype="multipart/form-data" class="upload">
		<label for="file">Upload your photo:</label>
		<input type="file" name="file" id="file" accept="image/*" required />
		<button>Submit</button>
	</form>

	{
		banner && thumb ? (
			<div class="uploads">
				<div class="image">
					<Image
						src={banner}
						alt={alt}
						height={300}
						aspectRatio={16 / 9}
						class="banner"
					/>
				</div>

				<div class="image">
					<Image
						src={thumb}
						alt={alt}
						height={300}
						aspectRatio={1}
						class="thumb"
					/>
				</div>
			</div>
		) : null
	}
</Layout>

<style>
	.uploads {
		display: flex;
		gap: 3rem;
	}

	.image {
		border: 1px solid color-mix(in oklch, var(--orange-600), transparent 60%);
		border-radius: 0.5rem;
		padding: 1.5rem;
	}
</style>
